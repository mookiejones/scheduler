#!/usr/bin/env node

const bodyParser = require('body-parser');
const express = require('express');
const fs = require('fs');
const {
  Server
} = require('http');
const methodOverride = require('method-override');

const app = express();

const server = new Server(app);

const io = require('socket.io')(server);

app.use(bodyParser.json());


// parse application/vnd.api+json as json
app.use(bodyParser.json({
  type: 'application/vnd.api+json'
}));

// parse application/x-www-form-urlencoded
app.use(bodyParser.urlencoded({
  extended: true
}));

// override with the X-HTTP-Method-Override header in the request. simulate DELETE/PUT
app.use(methodOverride('X-HTTP-Method-Override'));

/**
 * Listen on provided port, on all network interfaces.
 */
const port = 5555;

/**
 * Event listener for HTTP server "error" event.
 */

app.get('/', (req, res, next) => {
  next();
});

app.get('/api/colors', (req, res) => {
  const colors = `${__dirname}/colors.json`;
  const exists = fs.existsSync(colors);
  if (!exists) {
    fs.writeFileSync(colors, JSON.stringify({
      version: '0.0.1'
    }));
  }

  const text = fs.readFileSync(colors).toString('utf8');
  res.send(JSON.parse(text));
});

// set the static files location /public/img will be /img for users

// app.use(express.static("dist"));

server.listen(port, () => {
  console.log(`listening on ${port}`);
});